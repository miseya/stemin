diff --git a/mod.d.ts b/mod.d.ts
index b1b5ce7f7de951186c28949ea2980bdf6d4bfed4..035140a2699bee48a12ee5e6661023d48ee68f54 100755
--- a/mod.d.ts
+++ b/mod.d.ts
@@ -1,3 +1,3 @@
 declare const distance: (a: string, b: string) => number;
-declare const closest: (str: string, arr: readonly string[]) => string;
+declare const closest: (str: string, arr: string[] | Set<string>) => string;
 export { closest, distance };
diff --git a/mod.js b/mod.js
index 6bc27459399e6d5a7ef1d991aa8b3764176e36c2..b6e460a35e9affd0bb3ccf73ebf1fa2c3484cfa7 100755
--- a/mod.js
+++ b/mod.js
@@ -129,14 +129,26 @@ var distance = function (a, b) {
 exports.distance = distance;
 var closest = function (str, arr) {
     var min_distance = Infinity;
-    var min_index = 0;
-    for (var i = 0; i < arr.length; i++) {
-        var dist = distance(str, arr[i]);
-        if (dist < min_distance) {
-            min_distance = dist;
-            min_index = i;
+    if (Array.isArray(arr)) {
+        var min_index = 0;
+        for (var i = 0; i < arr.length; i++) {
+            var dist = distance(str, arr[i]);
+            if (dist < min_distance) {
+                min_distance = dist;
+                min_index = i;
+            }
+        }
+        return arr[min_index];
+    } else {
+        var min_word;
+        for (var word of arr) {
+            var dist = distance(str, word);
+            if (dist < min_distance) {
+                min_distance = dist;
+                min_word = word;
+            }
         }
+        return min_word;
     }
-    return arr[min_index];
 };
 exports.closest = closest;
